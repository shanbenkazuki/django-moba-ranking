name: Update Meta Data  # ワークフローの名前

on:
  schedule:
    - cron: '0 9 * * *'  # 毎朝9時に実行
  workflow_dispatch:

jobs:
  update_meta_data:  # ジョブの名前
    runs-on: ubuntu-latest  # ジョブを実行するランナーの環境

    steps:
    - uses: actions/checkout@v2  # リポジトリをチェックアウトするアクション

    - name: Set up Python  # Pythonのセットアップ
      uses: actions/setup-python@v2  # Pythonのセットアップに使用するアクション
      with:
        python-version: 3.12.2  # 使用するPythonのバージョン

    - name: Install dependencies  # 依存関係のインストール
      run: |
        python -m pip install --upgrade pip  # pipのアップグレード
        pip install -r requirements.txt  # requirements.txtからの依存関係のインストール

    - name: Run create_hero_meta command  # create_hero_metaコマンドの実行
      run: python manage.py run_create_hero_meta  # Djangoのカスタムコマンドを実行

    - name: Commit and push changes  # 変更のコミットとプッシュ
      run: |
        git config --local user.email "action@github.com"  # コミット用のメールアドレスを設定
        git config --local user.name "GitHub Action"  # コミット用のユーザー名を設定
        git add .  # 変更をステージング
        git commit -m "Update hero meta data" || echo "No changes to commit"  # 変更をコミット（変更がない場合はスキップ）
        git push  # 変更をGitHubにプッシュ

    - name: Deploy to Heroku  # Herokuへのデプロイ
      run: |
        git push https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git HEAD:master  # HerokuにプッシュしてマスターブランチをHerokuリモートのHEADにpush

    - name: Run save_latest_meta_data_to_db command on Heroku  # Heroku上でのsave_latest_meta_data_to_dbコマンドの実行
      run: |
          heroku run python manage.py run_save_latest_meta_data_to_db --app ${{ secrets.HEROKU_APP_NAME }}  # Heroku上でDjangoのカスタムコマンドを実行